version: "3.9"

services:
  db:
    image: mysql:8
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: lowcode_es
      MYSQL_USER: lowuser
      MYSQL_PASSWORD: lowpass
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d:ro
    networks: [ appnet ]
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -ppass --silent"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  backend:
    build:
      context: ./lowcode-backend
    image: lowcode-backend:dev
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 4000
      JWT_SECRETO: "cadenasecreta"
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: lowuser
      DB_PASS: lowpass
      DB_NAME: lowcode_es
      FRONT_URL: "http://localhost:8080"
      MAIL_FROM: "no-reply@lowcode.local"
      # Si luego configuras SMTP real, agrega:
      # SMTP_HOST: ""
      # SMTP_PORT: ""
      # SMTP_USER: ""
      # SMTP_PASS: ""
    ports:
      - "4000:4000"
    networks: [ appnet ]
    restart: unless-stopped

  frontend:
    build:
      context: ./lowcode-frontend
    image: lowcode-frontend:dev
    container_name: frontend
    depends_on: [ backend ]
    ports:
      - "8080:80"
    networks: [ appnet ]
    restart: unless-stopped
    # IMPORTANTE: la imagen debe incluir un nginx.conf que haga proxy /api -> backend:4000

volumes:
  db_data:

networks:
  appnet:
    driver: bridge
