# lowcode-frontend/nginx.conf
worker_processes 1;

events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  # --- Define al backend por nombre del contenedor Docker ---
  upstream api_upstream {
    server api:4000;  # ðŸ‘ˆ "api" es el nombre del contenedor del backend en la misma red
  }

  server {
    listen 80;
    # Si quieres forzar gzip (opcional):
    # gzip on; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # --- Servir SPA estÃ¡tica ---
    root /usr/share/nginx/html;
    index index.html;

    # Archivos estÃ¡ticos
    location /assets/ {
      try_files $uri =404;
      access_log off;
      expires 30d;
    }

    # --- Proxy para la API ---
    location /api/ {
      proxy_pass         http://api_upstream/;  # redirige /api/... a http://api:4000/...
      proxy_http_version 1.1;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;

      # Si tu backend necesita CORS, normalmente no hace falta porque mismo origen, pero por si acaso:
      # add_header Access-Control-Allow-Origin $http_origin always;
      # add_header Access-Control-Allow-Credentials "true" always;
      # add_header Access-Control-Allow-Headers "Authorization,Content-Type" always;
      # add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      # if ($request_method = OPTIONS) { return 204; }
    }

    # --- SPA fallback: cualquier ruta que no sea /api ni /assets devuelve index.html ---
    location / {
      try_files $uri /index.html;
    }
  }
}
